{"ast":null,"code":"var _jsxFileName = \"/root/rakeshfolder/SampleProject/front/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { data } from \"./data\"; // Assuming this file contains an array of objects with 'name' properties.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = useState(\"\"); // For storing the user's input\n  const [filtered, setFiltered] = useState(data); // Store the filtered data\n\n  // Filter the data whenever the input changes\n  const handleSearch = e => {\n    const searchQuery = e.target.value;\n    setName(searchQuery);\n\n    // Filter data based on the user's input\n    const filteredData = data.filter(item => item.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    setFiltered(filteredData); // Update the filtered data state\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: handleSearch,\n      placeholder: \"Search by name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filtered.length > 0 ? filtered.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: e.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"eYGYhARemsGzBnQ8DnvYB8c0a8M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","data","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","name","setName","filtered","setFiltered","handleSearch","e","searchQuery","target","value","filteredData","filter","item","toLowerCase","includes","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","map","i","_c","$RefreshReg$"],"sources":["/root/rakeshfolder/SampleProject/front/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { data } from \"./data\"; // Assuming this file contains an array of objects with 'name' properties.\n\nfunction App() {\n  const [name, setName] = useState(\"\"); // For storing the user's input\n  const [filtered, setFiltered] = useState(data); // Store the filtered data\n\n  // Filter the data whenever the input changes\n  const handleSearch = (e) => {\n    const searchQuery = e.target.value;\n    setName(searchQuery);\n    \n    // Filter data based on the user's input\n    const filteredData = data.filter(item => \n      item.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    setFiltered(filteredData); // Update the filtered data state\n  };\n\n  return (\n    <>\n      <input \n        type=\"text\" \n        value={name} \n        onChange={handleSearch} \n        placeholder=\"Search by name\" \n      />\n      <div>\n        {filtered.length > 0 ? (\n          filtered.map((e, i) => (\n            <div key={i}>\n              <h4>{e.name}</h4>\n            </div>\n          ))\n        ) : (\n          <p>No results found</p>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,WAAW,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAClCP,OAAO,CAACK,WAAW,CAAC;;IAEpB;IACA,MAAMG,YAAY,GAAGhB,IAAI,CAACiB,MAAM,CAACC,IAAI,IACnCA,IAAI,CAACX,IAAI,CAACY,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,WAAW,CAACM,WAAW,CAAC,CAAC,CAC5D,CAAC;IACDT,WAAW,CAACM,YAAY,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEd,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXP,KAAK,EAAER,IAAK;MACZgB,QAAQ,EAAEZ,YAAa;MACvBa,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACF1B,OAAA;MAAAmB,QAAA,EACGZ,QAAQ,CAACoB,MAAM,GAAG,CAAC,GAClBpB,QAAQ,CAACqB,GAAG,CAAC,CAAClB,CAAC,EAAEmB,CAAC,kBAChB7B,OAAA;QAAAmB,QAAA,eACEnB,OAAA;UAAAmB,QAAA,EAAKT,CAAC,CAACL;QAAI;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC,GADTG,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACN,CAAC,gBAEF1B,OAAA;QAAAmB,QAAA,EAAG;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACvB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP;AAACtB,EAAA,CArCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}