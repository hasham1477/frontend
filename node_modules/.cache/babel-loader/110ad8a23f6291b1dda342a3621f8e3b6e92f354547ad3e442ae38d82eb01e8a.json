{"ast":null,"code":"var _jsxFileName = \"/root/rakeshfolder/SampleProject/front/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Login from \"./Login\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [login, setLogin] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    setLogin(!!token);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"Zhukwcyzjn50eejO5WTSI05p3NY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","login","setLogin","token","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/rakeshfolder/SampleProject/front/src/App.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport Login from \"./Login\"\n\n\nconst App=()=>{\n  const[login,setLogin]=useState(false)\n\n  useEffect(()=>{\n    const token=localStorage.getItem(\"token\")\n    setLogin(!!token)\n  },[])\n  return(\n    <><Login/></>\n  )\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG3B,MAAMC,GAAG,GAACA,CAAA,KAAI;EAAAC,EAAA;EACZ,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EAErCD,SAAS,CAAC,MAAI;IACZ,MAAMW,KAAK,GAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzCH,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC;EACnB,CAAC,EAAC,EAAE,CAAC;EACL,oBACEP,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eAAEV,OAAA,CAACF,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAAE,CAAC;AAEjB,CAAC;AAAAV,EAAA,CAVKD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAYT,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}